@use 'sass:map';

@use 'config';
@use 'function' as *;
@use '../common/var' as *;

// set css var value, because we need translate value to string
// for example:
// @include set-css-var-value('color-white', white); --vft-color-white: white;
// @include set-css-var-value(('color', 'primary'), red); --vft-primary-color: red;
// @include set-css-var-value('color' 'primary', red); --vft-primary-color: red;
// --vft-primary-color: red;
@mixin set-css-var-value($name, $value) {
  #{joinVarName($name)}: #{$value};
}

// @include set-css-var-type('color', 'primary', $map);
// --vft-primary-color: #{map.get($map, 'primary')};
@mixin set-css-var-type($name, $type, $variables) {
  #{getCssVarName($name, $type)}: #{map.get($variables, $type)};
}

// generate color vars
// --vft-primary-color: red;
// --vft-primary-color-light-3: #ff4d4d;
// --vft-primary-color-light-5: #ff8080;
// --vft-primary-color-light-7: #ffb3b3;
// --vft-primary-color-light-8: #ffcccc;
// --vft-primary-color-light-9: #ffe6e6;
// --vft-primary-color-dark-2: #cc0000;
@mixin set-css-color-type($colors, $type) {
  @include set-css-var-value(($type, 'color'), map.get($colors, $type, 'base'));

  @each $i in (3, 5, 7, 8, 9) {
    @include set-css-var-value(($type, 'color', 'light', $i), map.get($colors, $type, 'light-#{$i}'));
  }

  @include set-css-var-value(($type, 'color', 'dark-2'), map.get($colors, $type, 'dark-2'));
}

// html css vars (can set dark)
@mixin set-root-css-vars($name, $variables, $isDark: false) {
  $selector: ':root';
  @if $isDark {
    $selector: ':root.dark';
  }

  #{$selector} {
    @include set-component-css-var($name, $variables);
  }
}


/**
 * @description 给组件生成 css 变量
 * @author wfd
 * @date 2022/10/19 13:12
 * @example
   set-component-css-var('tabs', ('header-height': 40px,'bg-color': red ))
   {
     --vft-tabs-header-height: 40px;
     --vft-tabs-bg-color: red;
   }
 */
@mixin set-component-css-var($name, $variables) {
  @each $attribute, $value in $variables {
    @if $attribute == 'default' {
      #{getCssVarName($name)}: #{$value};
    } @else {
      #{getCssVarName($name, $attribute)}: #{$value};
    }
  }
}

// generate rgb css var
// --vft-primary-color-rgb: 255, 0, 0;
// --vft-success-color-rgb: 62, 175, 124;
@mixin set-css-color-rgb($type) {
  $color: map.get($colors, $type, 'base');
  @include set-css-var-value(($type, 'color', 'rgb'), #{red($color), green($color), blue($color)});
}

// generate css var from existing css var
// for example:
// @include css-var-from-global(('button', 'text-color'), ('color', $type))
// --vft-button-text-color: var(--vft-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});
}
